var searchIndex = JSON.parse('{\
"swiftlet_quic":{"doc":"Providing real-time internet communications using the QUIC …","t":"IDLLLKLKALLKLLLKLLLNNNDNNNEGNNNNNNNNNDEENNNNNNNNNNNNNNNNNENNNNNNNNNNNNNLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLMMLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLML","n":["EndpointEventCallbacks","EndpointHandler","background_stream_recv","borrow","borrow_mut","connection_ended","connection_ending_warning","connection_started","endpoint","from","into","main_stream_recv","new","rt_stream_recv","run_event_loop","tick","try_from","try_into","type_id","AeadLimitReached","ApplicationError","BackgroundStreamFinished","Config","ConfigCreation","ConnectionClose","ConnectionCreation","ConnectionEndReason","ConnectionId","ConnectionIdLimitError","ConnectionNotFound","ConnectionPing","ConnectionRecv","ConnectionRefused","ConnectionSend","CryptoBufferExceeded","CryptoErrorEnd","CryptoErrorStart","Endpoint","EndpointCloseReason","Error","FinalStateError","FlowControlError","FrameEncodingError","IdleTimeout","InternalError","InvalidToken","IsServer","KeyUpdateError","LocalApplication","LocalEndpoint","MainStreamFinished","NoError","NoViablePath","PeerApplication","PeerEndpoint","ProtocolViolation","Randomness","SocketAddr","SocketCreation","SocketRecv","SocketSend","StreamCreation","StreamLimitError","StreamRecv","StreamSend","StreamStateError","TransportParameterError","Uncertain","UnexpectedClose","V4","V6","add_client_connection","background_recv_first_bytes","background_stream_send","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","close_connection","cmp","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_str","get_connection_socket_addr","get_num_connections","hash","idle_timeout_in_ms","initial_background_recv_size","initial_main_recv_size","initial_rt_recv_size","into","into","into","into","into","into","ip","is_ipv4","is_ipv6","keep_alive_timeout","main_recv_first_bytes","main_stream_send","new","new_client","new_client_with_first_connection","new_server","parse_ascii","partial_cmp","port","reliable_stream_buffer","rt_recv_first_bytes","rt_stream_send","set_ip","set_port","to_owned","to_socket_addrs","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unreliable_stream_buffer","update_keep_alive_duration"],"q":[[0,"swiftlet_quic"],[19,"swiftlet_quic::endpoint"],[160,"core::option"],[161,"core::time"],[162,"core::result"],[163,"core::any"],[164,"alloc::vec"],[165,"core::cmp"],[166,"core::fmt"],[167,"core::fmt"],[168,"core::net::socket_addr"],[169,"core::convert"],[170,"core::net::parser"],[171,"core::hash"],[172,"core::option"],[173,"alloc::string"]],"d":["Required QUIC Endpoint Handler Event Callback Functions","Main library structure that handles the QUIC Endpoint","Called when there is something to read on the background …","","","Called when a connection has ended and should be cleaned …","Called when a connection is in the process of ending and …","Called when a new connection is started and is application …","QUIC Endpoint Module","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Called when there is something to read on the main stream.","Create a QUIC Endpoint Handler by giving it an already …","Called when there is something to read on the real-time …","QUIC Endpoint Handler Event Loop","Called when the next tick occurrs based on the tick …","","","","Excessive use of packet protection keys","Application error","Background stream finished","The Endpoint Configuration Structure","Error with the Quic Config Creation","Error closing a connection","Error creating a connection","Reason the connection has ended / is ending","A Connection ID used to communicate with the endpoint …","Too many connection IDs received","Cannot find connection from Connection ID","Error sending out a PING","Error having a connection process the received data","Server refuses a connection","Error getting send data from a connection","CRYPTO data buffer overflowed","TLS Alert End","TLS Alert Start","The Quic Endpoint structure","Based on combination of QUIC Transport Error Codes and …","Errors that the QUIC Endpoint can return","Change to final size","Flow control error","Frame encoding error","Idle Timeout","Implementation Error","Invalid Token received","Error trying to perform a client Endpoint operation on a …","Invalid packet protection update","Local Application Error","Local Endpoint Error","Main stream finished","No Error","No viable network path exists","Peer Application Error","Peer Endpoint Error","Generic protocol violation","Error with creating or using the randomness structure / …","An internet socket address, either IPv4 or IPv6.","Error with the UDP socket creation","Error receiving data on the UDP socket","Error sending data on the UDP socket","Error finishing the connection establishment process and …","Too many streams opened","Error receiving data from the stream","Error sending data on the stream","Frame received in invalid stream state","Error in transport parameters","Not sure of the reason","Error from an unexpected close","An IPv4 socket address.","An IPv6 socket address.","Add a connection for a Client Endpoint","The number of bytes to receive on the background stream …","Send data over the background stream. This data is queued …","","","","","","","","","","","","","","","Close a connection with a given error code value","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a <code>SocketAddrV6</code> into a <code>SocketAddr::V6</code>.","Converts a <code>SocketAddrV4</code> into a <code>SocketAddr::V4</code>.","Converts a tuple struct (Into&lt;<code>IpAddr</code>&gt;, <code>u16</code>) into a …","","Get the socket address for a connection","Get the number of connections that the Endpoint is managing","","The quic connection idle timeout in milliseconds.","The initial background stream recieve buffer size.","The initial main stream recieve buffer size.","The initial real-time stream recieve buffer size.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the IP address associated with this socket address.","Returns <code>true</code> if the IP address in this <code>SocketAddr</code> is an …","Returns <code>true</code> if the IP address in this <code>SocketAddr</code> is an …","The keep alive timeout duration.","The number of bytes to receive on the main stream before …","Send data over the main stream. This data is queued up if …","Creates a new socket address from an IP address and a port …","Create a QUIC Client Endpoint","Create a QUIC Client Endpoint with an initial connection","Create a QUIC Server Endpoint","Parse a socket address from a slice of bytes.","","Returns the port number associated with this socket …","The quic connection bidirectional stream receive buffer …","The number of bytes to receive on the real-time stream …","Send data over the real-time stream. This data is queued …","Changes the IP address associated with this socket address.","Changes the port number associated with this socket …","","","","","","","","","","","","","","","","","","","","","","The quic connection unidirectional stream receive buffer …","Update the keep alive duration time"],"i":[0,0,10,11,11,10,10,10,0,11,11,10,11,10,11,10,11,11,11,23,23,23,0,14,14,14,0,0,23,14,14,14,23,14,23,23,23,0,0,0,23,23,23,7,23,23,14,23,7,7,23,23,23,7,7,23,14,0,14,14,14,14,23,14,14,23,23,7,14,17,17,1,32,1,32,1,14,23,7,17,32,1,14,23,7,17,17,17,1,17,17,14,23,7,17,17,32,1,14,23,7,17,17,17,17,17,1,1,17,32,32,32,32,32,1,14,23,7,17,17,17,17,32,32,1,17,1,1,1,17,17,17,32,32,1,17,17,17,17,17,32,1,14,23,7,17,32,1,14,23,7,17,32,1,14,23,7,17,32,1],"f":[0,0,[[-1,1,2,[4,[3]]],[[6,[5]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,1,2,7,5],8,[]],[[-1,1,2,7],9,[]],[[-1,1,2],9,[]],0,[-1,-1,[]],[-1,-2,[],[]],[[-1,1,2,[4,[3]]],[[6,[5]]],[]],[[1,10],11],[[-1,1,2,[4,[3]],12],5,[]],[[11,13],[[15,[8,14]]]],[[-1,1],8,[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,17,18],[[15,[9,14]]]],0,[[1,2,[19,[3]]],[[15,[9,14]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[17,17],[[-1,-2],9,[],[]],[[1,2,12],[[15,[8,14]]]],[[17,17],20],[[17,17],8],[[14,21],22],[[23,21],22],[[7,21],22],[[17,21],[[15,[9,24]]]],[[17,21],[[15,[9,24]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[25,17],[26,17],[[[9,[-1,27]]],17,[[29,[28]]]],[18,[[15,[17,30]]]],[[1,2],[[15,[17,14]]]],[1,5],[[17,-1],9,31],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[17,28],[17,8],[17,8],0,0,[[1,2,[19,[3]]],[[15,[9,14]]]],[[28,27],17],[[17,[4,[3]],18,32],[[15,[1,14]]]],[[17,[4,[3]],18,17,18,32],[[15,[1,14]]]],[[17,[4,[3]],18,18,32],[[15,[1,14]]]],[[[4,[3]]],[[15,[17,30]]]],[[17,17],[[6,[20]]]],[17,27],0,0,[[1,2,[6,[[19,[3]]]],8],[[15,[9,14]]]],[[17,28],9],[[17,27],9],[-1,-2,[],[]],[17,[[15,[[33,[17]],34]]]],[-1,35,[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],0,[[1,[6,[13]]],9]],"c":[],"p":[[3,"Endpoint",19],[6,"ConnectionId",19],[15,"u8"],[15,"slice"],[15,"usize"],[4,"Option",160],[4,"ConnectionEndReason",19],[15,"bool"],[15,"tuple"],[8,"EndpointEventCallbacks",0],[3,"EndpointHandler",0],[15,"u64"],[3,"Duration",161],[4,"Error",19],[4,"Result",162],[3,"TypeId",163],[4,"SocketAddr",19],[15,"str"],[3,"Vec",164],[4,"Ordering",165],[3,"Formatter",166],[6,"Result",166],[4,"EndpointCloseReason",19],[3,"Error",166],[3,"SocketAddrV6",167],[3,"SocketAddrV4",167],[15,"u16"],[4,"IpAddr",168],[8,"Into",169],[3,"AddrParseError",170],[8,"Hasher",171],[3,"Config",19],[3,"IntoIter",160],[3,"Error",172],[3,"String",173]],"b":[[94,"impl-Display-for-SocketAddr"],[95,"impl-Debug-for-SocketAddr"],[102,"impl-From%3CSocketAddrV6%3E-for-SocketAddr"],[103,"impl-From%3CSocketAddrV4%3E-for-SocketAddr"],[104,"impl-From%3C(I,+u16)%3E-for-SocketAddr"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
